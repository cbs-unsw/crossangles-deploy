name: Deploy

on:
  push:
    branches: [ master, release ]

jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false
        terraform_version: 0.12.26

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Terraform Init
      run: ./tf.sh init

    - name: Select Terraform Workspace
      if: github.ref != 'refs/heads/release'
      run: |
        ./tf.sh workspace select staging
        ./tf.sh init

    - name: Terraform Refresh
      run: ./tf.sh refresh
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    - name: Build and Deploy Lambdas
      run: ./deploy-lambdas.sh

    - name: Build and Deploy App for UNSW
      run: ./deploy-app.sh unsw

    - name: Terraform Apply
      run: ./tf.sh apply -auto-approve
      env:
        TF_VAR_mailgun_api_key: ${{ secrets.MAILGUN_API_KEY }}
        TF_VAR_pjsc_key: ${{ secrets.PJSC_KEY }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
