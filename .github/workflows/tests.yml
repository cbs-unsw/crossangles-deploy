name: Test & Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install dependencies
      run: ./ci.sh ci-install

    - name: Lint Code
      run: ./ci.sh lint

    - name: Run unit tests
      run: ./ci.sh test

  validate:
    name: Validate IAC
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Validate Terraform IAC
      run: |
        cd deploy
        ./tf.sh init
        ./tf.sh validate
      env:
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        TF_VAR_mailgun_key: ${{ secrets.MAILGUN_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy:
    name: Deploy
    needs: [test, validate]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install dependencies
      run: ./ci.sh ci-install

    - name: Deploy IAC (terraform)
      run: |
        ./deploy/tf.sh init
        ./deploy/deploy.sh --prod --already-tested
      env:
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        TF_VAR_mailgun_key: ${{ secrets.MAILGUN_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
