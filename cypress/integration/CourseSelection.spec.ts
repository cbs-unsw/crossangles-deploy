/// <reference types="Cypress" />

context('Course selection', () => {
  beforeEach(() => {
    cy.visit('/')
  })

  it('can add and remove courses', () => {
    // Add COMP1511
    cy.get('#course-selection-autocomplete').type('comp1511{enter}')
    cy.get('#course-display').should('contain.text', 'COMP1511')

    // Add COMP1521
    cy.get('#course-selection-autocomplete').type('comp15')
    cy.dataCy('autocomplete-option')
      .first().should('contain.text', 'COMP1521')
      .click()
    cy.get('#course-display')
      .should('contain.text', 'COMP1511')
      .should('contain.text', 'COMP1521')

    // Search for courses starting with "M", select MATH1231 (requires clicking 'see more')
    cy.get('#course-selection-autocomplete').type('m')
    cy.dataCy('autocomplete-option')
      .last().should('contain.text', 'See more results...')
      .click()
    cy.dataCy('autocomplete-option')
      .contains('MATH1231')
      .click()
    cy.get('#course-display').should('contain.text', 'MATH1231')

    // Can remove a course
    cy.dataCy('remove-course')
      .eq(1)
      .click()
    cy.get('#course-display')
      .should('not.contain.text', 'COMP1521')
      .should('contain.text', 'COMP1511')
      .should('contain.text', 'MATH1231')
  })

  it('can add/edit/remove a custom event', () => {
    cy.dataCy('create-custom-event')
      .click()
    cy.dataCy('custom-event-name')
      .type('A personal event name')
    cy.dataCy('custom-event-duration')
      .click()
    cy.dataCy('custom-event-duration-item')
      .eq(4)
      .click()
    cy.dataCy('custom-event-day')
      .last()
      .click()
    cy.dataCy('custom-event-day-item')
      .first()
      .click()
    cy.dataCy('custom-event-time')
      .last()
      .click()
    cy.dataCy('custom-event-time-item')
      .first()
      .click()
    cy.dataCy('custom-event-day')
      .last()
      .click()
    cy.dataCy('custom-event-day-item')
      .last()
      .click()
    cy.dataCy('custom-event-time')
      .last()
      .click()
    cy.dataCy('custom-event-time-item')
      .last()
      .click()
    cy.dataCy('custom-event-submit')
      .should('contain.text', 'Add')
      .click()

    cy.get('#course-display')
      .should('contain.text', 'A personal event name')

    // Clicking add new event gives clean dialog
    cy.dataCy('create-custom-event')
      .click()
    cy.dataCy('custom-event-name')
      .find('input')
      .should('have.value', '')
    cy.dataCy('custom-event-duration')
      .find('input')
      .should('have.value', '1')
    cy.dataCy('custom-event-day')
      .should('have.length', 1)
      .should('have.value', '')
    cy.dataCy('custom-event-submit')
      .should('contain.text', 'Add')
    cy.dataCy('close-dialog')
      .click()

    // Clicking edit event loads expected values
    cy.dataCy('edit-custom')
      .click()
    cy.get('#custom-event-title')
      .should('exist')
    cy.dataCy('custom-event-name')
      .find('input')
      .should('have.value', 'A personal event name')
      .clear()
      .type('New name for event')
    cy.dataCy('custom-event-duration')
      .find('input')
      .should('have.value', '2.5')
    cy.dataCy('custom-event-day')
      .should('have.length', 3)
      .first()
      .find('input')
      .should('have.value', 'M')
    cy.dataCy('custom-event-time')
      .eq(0)
      .find('input')
      .should('have.value', '8')
    cy.dataCy('custom-event-time')
      .eq(1)
      .find('input')
      .should('have.value', '20')
    cy.dataCy('custom-event-submit')
      .should('contain.text', 'Save')
      .click()

    cy.get('#course-display')
      .should('not.contain.text', 'A personal event name')
      .should('contain.text', 'New name for event')


    cy.dataCy('remove-course')
      .click()
  })
})
